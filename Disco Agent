<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Continuant AI Discovery Chatbot Demo</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f3f4f6;
        }
        #chat-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 600px;
            padding: 20px;
            margin: 20px auto;
        }
        #chat-output {
            height: 400px;
            overflow-y: auto;
            border: 1px solid #e5e7eb;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 10px;
        }
        .message {
            margin: 10px 0;
            padding: 10px;
            border-radius: 4px;
        }
        .bot-message {
            background-color: #e5e7eb;
        }
        .user-message {
            background-color: #3b82f6;
            color: white;
            text-align: right;
        }
        #chat-input {
            width: 100%;
            padding: 10px;
            border: 1px solid #e5e7eb;
            border-radius: 4px;
        }
        #options-container {
            margin-top: 10px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .option-button {
            background-color: #3b82f6;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        .option-button:hover {
            background-color: #2563eb;
        }
        .admin-note {
            background-color: #fefcbf;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div id="chat-container" class="p-4">
        <h1 class="text-2xl font-bold text-center mb-4">Continuant AI Discovery Chatbot Demo</h1>
        <div class="admin-note">
            <p><strong>Note for HubSpot Admins:</strong> This demo shows the AI Discovery Chatbot. Responses are logged to the browser console (open Developer Tools with F12). For live integration, replace <code>YOUR_PORTAL_ID</code> and <code>YOUR_FORM_GUID</code> with HubSpot credentials and create a form with matching fields. Contact me to discuss adding this to our HubSpot website.</p>
        </div>
        <div id="chat-output"></div>
        <input id="chat-input" type="text" placeholder="Type your response..." class="mb-2">
        <div id="options-container"></div>
    </div>

    <script>
        // Placeholder HubSpot Forms API configuration
        const HUBSPOT_PORTAL_ID = 'YOUR_PORTAL_ID'; // Replace with HubSpot Portal ID for live integration
        const HUBSPOT_FORM_GUID = 'YOUR_FORM_GUID'; // Replace with HubSpot Form GUID for live integration

        const questions = [
            {
                text: "What are your top business priorities for the next 12–18 months?",
                options: ["Cost reduction", "Customer experience", "Operational efficiency", "Other (please specify)"],
                key: "business_priorities"
            },
            {
                text: "How does your leadership measure success for IT investments?",
                options: ["ROI", "Customer satisfaction", "Efficiency gains", "Other (please specify)"],
                key: "success_metrics"
            },
            {
                text: "What’s the biggest bottleneck in your customer service or operations?",
                options: ["Slow response times", "Manual processes", "Data silos", "Other (please specify)"],
                key: "ai_bottleneck"
            },
            {
                text: "How much time is lost to manual processes daily? (Estimate in hours)",
                options: ["Less than 1 hour", "1–3 hours", "3–5 hours", "More than 5 hours", "Other (please specify)"],
                key: "time_lost"
            },
            {
                text: "What systems are you using for customer interactions or data analysis?",
                options: ["Legacy systems", "Cloud-based tools", "Custom software", "Other (please specify)"],
                key: "current_systems"
            },
            {
                text: "Have you explored AI tools, and what’s your experience?",
                options: ["Not yet explored", "Tried but not satisfied", "Using successfully", "Other (please specify)"],
                key: "ai_experience"
            },
            {
                text: "What’s your budget range for addressing these challenges?",
                options: ["Under $10,000", "$10,000–$50,000", "$50,000–$100,000", "Over $100,000", "Other (please specify)"],
                key: "budget_range"
            },
            {
                text: "Who else is involved in evaluating AI solutions?",
                options: ["IT team", "C-level executives", "Finance team", "Other (please specify)"],
                key: "decision_makers"
            },
            {
                text: "What would success look like for solving your key challenges?",
                options: ["Cost savings", "Improved customer satisfaction", "Faster processes", "Other (please specify)"],
                key: "success_outcomes"
            }
        ];

        let currentQuestionIndex = 0;
        const responses = {};
        const userEmail = prompt("Please enter your email to start the questionnaire (for follow-up):");

        const chatOutput = document.getElementById('chat-output');
        const chatInput = document.getElementById('chat-input');
        const optionsContainer = document.getElementById('options-container');

        function displayMessage(message, type) {
            const div = document.createElement('div');
            div.className = `message ${type}`;
            div.textContent = message;
            chatOutput.appendChild(div);
            chatOutput.scrollTop = chatOutput.scrollHeight;
        }

        function displayOptions(options) {
            optionsContainer.innerHTML = '';
            options.forEach(option => {
                const button = document.createElement('button');
                button.className = 'option-button';
                button.textContent = option;
                button.onclick = () => handleOptionClick(option);
                optionsContainer.appendChild(button);
            });
        }

        function handleOptionClick(option) {
            if (option === "Other (please specify)") {
                chatInput.style.display = 'block';
                chatInput.focus();
            } else {
                saveResponse(option);
                displayMessage(option, 'user-message');
                moveToNextQuestion();
            }
        }

        function saveResponse(response) {
            responses[questions[currentQuestionIndex].key] = response;
            localStorage.setItem('ai_discovery_responses', JSON.stringify(responses));
            console.log('Response saved:', { key: questions[currentQuestionIndex].key, value: response });
        }

        function submitToHubSpot() {
            const formData = {
                fields: [
                    { name: 'email', value: userEmail },
                    ...Object.keys(responses).map(key => ({ name: key, value: responses[key] }))
                ],
                context: {
                    pageUri: window.location.href,
                    pageName: document.title
                }
            };
            // For demo, log to console instead of live API call
            console.log('Simulated HubSpot submission:', formData);
            // Uncomment below for live integration after adding valid credentials
            /*
            fetch(`https://api.hsforms.com/submissions/v3/integration/submit/${HUBSPOT_PORTAL_ID}/${HUBSPOT_FORM_GUID}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => console.log('Form submitted:', data))
            .catch(error => console.error('Error submitting to HubSpot:', error));
            */
        }

        function moveToNextQuestion() {
            currentQuestionIndex++;
            if (currentQuestionIndex < questions.length) {
                displayMessage(questions[currentQuestionIndex].text, 'bot-message');
                displayOptions(questions[currentQuestionIndex].options);
                chatInput.style.display = 'none';
            } else {
                displayMessage("Thank you for completing the questionnaire! We'll follow up with tailored AI recommendations.", 'bot-message');
                optionsContainer.innerHTML = '';
                chatInput.style.display = 'none';
                submitToHubSpot();
            }
        }

        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && chatInput.value.trim()) {
                const response = chatInput.value.trim();
                displayMessage(response, 'user-message');
                saveResponse(response);
                chatInput.value = '';
                moveToNextQuestion();
            }
        });

        function startChat() {
            if (userEmail) {
                displayMessage("Welcome to Continuant’s AI Discovery Chatbot! Let’s explore how AI can help your business. " + questions[0].text, 'bot-message');
                displayOptions(questions[0].options);
            } else {
                displayMessage("Please provide a valid email to continue.", 'bot-message');
            }
        }

        startChat();
    </script>
</body>
</html>
